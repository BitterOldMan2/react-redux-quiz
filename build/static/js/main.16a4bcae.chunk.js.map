{"version":3,"sources":["actions/index.js","components/DifficultyButton.js","utils/utils.js","components/Loading.js","pages/StartPage.js","actions/getQuestionList.js","components/Navbar.js","components/AnswerButton.js","components/Question.js","components/GameCard.js","pages/GamePage.js","components/Footer.js","components/GameOver.js","App.js","reducers/index.js","index.js"],"names":["setGameStatus","status","type","payload","setGameScore","number","DifficultyButton","level","name","getDifficultyLevel","onClick","className","addClassName","element","classList","add","removeClassName","remove","difficultyButtonInformation","buttonName","difficultyLevel","Loading","connect","state","getQuestionList","dispach","a","endpoint","fetch","json","data","results","useState","difficulty","setDifficulty","loading","setLoading","setTimeout","renderDifficultyButtons","map","button","key","gameStatus","restartGame","console","log","AnswerButton","answer","checkAnswer","e","dangerouslySetInnerHTML","__html","DOMPurity","sanitize","value","Question","question","questionList","gameScore","questionNumber","setQuestionNumber","answersArray","setAnswersArray","useEffect","incorrect_answers","correct_answer","sort","Math","random","refGameCard","useRef","answerResult","answerButton","currentTarget","current","renderAnswers","ref","Footer","selectPage","combineReducers","action","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16a4bcae.chunk.js","sourcesContent":["export const setGameStatus = (status) => {\r\n  return {\r\n    type: \"SET_GAME_STATUS\",\r\n    payload: status,\r\n  };\r\n};\r\n\r\nexport const setGameScore = (number) => {\r\n  return {\r\n    type: \"SET_GAME_SCORE\",\r\n    payload: number + 1,\r\n  };\r\n};\r\n","import React from \"react\";\r\n\r\nconst DifficultyButton = ({ level, name, getDifficultyLevel }) => {\r\n  const onDifficultyButtonClick = () => {\r\n    return getDifficultyLevel(level);\r\n  };\r\n\r\n  return (\r\n    <button\r\n      onClick={() => onDifficultyButtonClick()}\r\n      className=\"button-difficulty\"\r\n    >\r\n      {name}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default DifficultyButton;\r\n","export const shuffleArray = (array) => array.sort(() => Math.random() - 0.3);\r\n\r\nexport const succesRate = (correct, number) => {\r\n  return (correct / number) * 100;\r\n};\r\n\r\nexport const addClassName = (element, name) => {\r\n  return element.classList.add(name);\r\n};\r\n\r\nexport const removeClassName = (element, name) => {\r\n  return element.classList.remove(name);\r\n};\r\n\r\nexport const difficultyButtonInformation = [\r\n  {\r\n    buttonName: \"Easy\",\r\n    difficultyLevel: \"easy\",\r\n  },\r\n  {\r\n    buttonName: \"Normal\",\r\n    difficultyLevel: \"medium\",\r\n  },\r\n  {\r\n    buttonName: \"Hard\",\r\n    difficultyLevel: \"hard\",\r\n  },\r\n];\r\n\r\nexport const difficultyLevelMessage = \"Please Choose  Difficulty Level\";\r\n","import React from \"react\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"game-page\">\r\n      <div className=\"loader\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { getQuestionList } from \"../actions/getQuestionList\";\r\nimport { setGameStatus, setGameScore } from \"../actions\";\r\n\r\nimport DifficultyButton from \"../components/DifficultyButton\";\r\nimport { difficultyButtonInformation } from \"../utils/utils\";\r\n\r\nimport Loading from \"../components/Loading\";\r\n\r\nconst StartPage = ({ setGameStatus, getQuestionList, setGameScore }) => {\r\n  const [difficulty, setDifficulty] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const getDifficultyLevel = (level) => {\r\n    return setDifficulty(level);\r\n  };\r\n\r\n  if (difficulty) {\r\n    getQuestionList(difficulty);\r\n    setTimeout(() => {\r\n      setGameStatus(\"game-page\");\r\n    }, 1000);\r\n  }\r\n\r\n  setTimeout(() => {\r\n    setLoading(false);\r\n    setGameScore();\r\n  }, 1000);\r\n\r\n  const renderDifficultyButtons = difficultyButtonInformation.map((button) => {\r\n    return (\r\n      <DifficultyButton\r\n        key={button.buttonName}\r\n        getDifficultyLevel={getDifficultyLevel}\r\n        name={button.buttonName}\r\n        level={button.difficultyLevel}\r\n      />\r\n    );\r\n  });\r\n\r\n  if (loading) return <Loading />;\r\n  return (\r\n    <div className=\"page\">\r\n      <h2>Please Choose Difficulty!!</h2>\r\n      <div className=\"pick-difficulty\">{renderDifficultyButtons}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return state;\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getQuestionList,\r\n  setGameStatus,\r\n  setGameScore,\r\n})(StartPage);\r\n","export const getQuestionList = (difficultyLevel) => {\r\n  return async (dispach) => {\r\n    const endpoint = `https://opentdb.com/api.php?amount=10&difficulty=${difficultyLevel}`;\r\n    const data = await (await fetch(endpoint)).json();\r\n\r\n    dispach({ type: \"GET_QUESTIONS_LIST\", payload: [...data.results] });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setGameStatus } from \"../actions\";\r\n\r\nconst Navbar = ({ gameStatus, setGameStatus }) => {\r\n  const restartGame = () => setGameStatus(\"start-page\");\r\n\r\n  const renderIcon = () => {\r\n    console.log(\"works\");\r\n    const icon = (\r\n      <i onClick={restartGame} className=\"fas fa-arrow-left fa-3x\"></i>\r\n    );\r\n    return gameStatus == \"game-page\" ? icon : null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <div className=\"navbar-icon\">{renderIcon()}</div>\r\n      <h1 className=\"logo\">Quiz-Game</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => state;\r\n\r\nexport default connect(mapStateToProps, { setGameStatus })(Navbar);\r\n","import React from \"react\";\r\nimport DOMPurity from \"dompurify\";\r\n\r\nconst AnswerButton = ({ answer, checkAnswer }) => {\r\n  return (\r\n    <>\r\n      <button\r\n        onClick={(e) => checkAnswer(e)}\r\n        key={answer}\r\n        dangerouslySetInnerHTML={{\r\n          __html: DOMPurity.sanitize(answer),\r\n        }}\r\n        value={answer}\r\n        className=\"answer-button\"\r\n      ></button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnswerButton;\r\n","import React from \"react\";\r\nimport DOMPurity from \"dompurify\";\r\nconst Question = ({ question }) => {\r\n  return (\r\n    <div\r\n      dangerouslySetInnerHTML={{\r\n        __html: DOMPurity.sanitize(question),\r\n      }}\r\n      className=\"game-question\"\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { shuffleArray, addClassName, removeClassName } from \"../utils/utils\";\r\nimport { setGameStatus, setGameScore } from \"../actions/index\";\r\nimport AnswerButton from \"./AnswerButton\";\r\nimport Question from \"./Question\";\r\n\r\nconst GameCard = ({ questionList, setGameStatus, setGameScore, gameScore }) => {\r\n  const [questionNumber, setQuestionNumber] = useState(0);\r\n  const [answersArray, setAnswersArray] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setAnswersArray(\r\n      shuffleArray([\r\n        ...questionList[questionNumber].incorrect_answers,\r\n        questionList[questionNumber].correct_answer,\r\n      ])\r\n    );\r\n  }, [questionNumber]);\r\n\r\n  const refGameCard = useRef(null);\r\n\r\n  if (questionNumber === 9) {\r\n    setGameStatus(\"game-over-page\");\r\n  }\r\n\r\n  const checkAnswer = (e) => {\r\n    let answerButton = e.currentTarget;\r\n    let answerResult;\r\n\r\n    if (answerButton.value === questionList[questionNumber].correct_answer) {\r\n      answerResult = \"right-answer\";\r\n      setGameScore(gameScore);\r\n    } else {\r\n      answerResult = \"wrong-answer\";\r\n    }\r\n    addClassName(answerButton, answerResult);\r\n    addClassName(refGameCard.current, \"disabled\");\r\n    setTimeout(() => {\r\n      removeClassName(refGameCard.current, \"disabled\");\r\n      removeClassName(answerButton, answerResult);\r\n      setQuestionNumber(questionNumber + 1);\r\n    }, 2500);\r\n  };\r\n\r\n  const renderAnswers = answersArray.map((answer) => (\r\n    <AnswerButton key={answer} checkAnswer={checkAnswer} answer={answer} />\r\n  ));\r\n\r\n  return (\r\n    <div ref={refGameCard} className=\"container\">\r\n      <div className=\"game-card\">\r\n        <Question question={questionList[questionNumber].question} />\r\n        <div className=\"game-answers\">{renderAnswers}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return state;\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setGameStatus,\r\n  setGameScore,\r\n})(GameCard);\r\n","import React, { useState } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport GameCard from \"../components/GameCard\";\r\nimport Loading from \"../components/Loading\";\r\n\r\nconst GamePage = ({ questionList }) => {\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  if (questionList[0]) {\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 1000);\r\n  }\r\n\r\n  if (loading) return <Loading />;\r\n  return (\r\n    <div>\r\n      <GameCard />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return state;\r\n};\r\nexport default connect(mapStateToProps)(GamePage);\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return <div className=\"footer\">&copy; 2020 Made By || Michael Pattas</div>;\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState } from \"react\";\r\nimport Loading from \"../components/Loading\";\r\nimport { connect } from \"react-redux\";\r\nimport { succesRate } from \"../utils/utils\";\r\nimport { setGameStatus } from \"../actions\";\r\n\r\nconst GameOver = ({ setGameStatus, gameScore }) => {\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  setTimeout(() => {\r\n    setLoading(false);\r\n  }, 2000);\r\n  const restartGame = () => {\r\n    setGameStatus(\"start-page\");\r\n  };\r\n\r\n  if (loading === true) {\r\n    return <Loading />;\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"game-over-title\">\r\n        <h1>Game over</h1>\r\n      </div>\r\n      <div className=\"bottom-line\"></div>\r\n      <div className=\"succes-rate\">\r\n        {<h3>Succes Rate: {succesRate(gameScore, 10)} %</h3>}\r\n      </div>\r\n\r\n      <div>\r\n        <button\r\n          onClick={() => restartGame()}\r\n          className=\"button-difficulty start-button\"\r\n        >\r\n          Play Again\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return state;\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setGameStatus,\r\n})(GameOver);\r\n","import React from \"react\";\r\n\r\n//Pages\r\nimport StartPage from \"./pages/StartPage\";\r\n//Components\r\nimport Navbar from \"./components/Navbar\";\r\nimport GamePage from \"./pages/GamePage\";\r\nimport Footer from \"./components/Footer\";\r\nimport GameOver from \"./components/GameOver\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst App = ({ gameStatus }) => {\r\n  const selectPage = () => {\r\n    switch (gameStatus) {\r\n      case \"start-page\":\r\n        return <StartPage />;\r\n      case \"game-page\":\r\n        return <GamePage />;\r\n      case \"game-over-page\":\r\n        return <GameOver />;\r\n      default:\r\n        return <StartPage />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"layout container\">\r\n      <Navbar />\r\n      {selectPage()}\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return state;\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(App);\r\n","import { combineReducers } from \"redux\";\r\n\r\nconst questionListReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"GET_QUESTIONS_LIST\":\r\n      return [...action.payload];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst gameStatusReducer = (state = \"start-page\", action) => {\r\n  switch (action.type) {\r\n    case \"SET_GAME_STATUS\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst gameScore = (state = 0, action) => {\r\n  switch (action.type) {\r\n    case \"SET_GAME_SCORE\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  gameStatus: gameStatusReducer,\r\n  questionList: questionListReducer,\r\n  gameScore: gameScore,\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n\r\nimport App from \"./App\";\r\nimport reducers from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\n\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}