{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\44741\\\\Desktop\\\\projects\\\\javascript-quiz\\\\src\\\\components\\\\GameCard.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getQuestionList } from \"../actions/getQuestionList\";\nimport { shuffleArray } from \"../utils/utils\";\nimport { setGameStatus, setLoadingStatus, setQuestionNumber } from \"../actions/index\";\nimport DOMPurity from \"dompurify\";\n\nconst GameCard = ({\n  questionList,\n  loading,\n  setLoadingStatus,\n  questionNumber,\n  setQuestionNumber,\n  setGameStatus\n}) => {\n  let answersArray = shuffleArray([...questionList[questionNumber].incorrect_answers, questionList[questionNumber].correct_answer]);\n\n  if (questionNumber === 9) {\n    return setGameStatus(\"game-over-page\");\n  }\n\n  const checkAnswer = e => {\n    let disabled = \"\";\n\n    if (e.currentTarget.value === questionList[questionNumber].correct_answer) {\n      e.currentTarget.classList.add(\"right-answer\");\n      disabled = \"disabled\";\n    } else {}\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `game-page ${disbled}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: DOMPurity.sanitize(questionList[questionNumber].question)\n    },\n    className: \"game-question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game-answers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, answersArray.map(answer => {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      dangerouslySetInnerHTML: {\n        __html: DOMPurity.sanitize(answer)\n      },\n      value: answer,\n      onClick: e => checkAnswer(e),\n      className: \"answer-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    });\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(mapStateToProps, {\n  getQuestionList,\n  setLoadingStatus,\n  setQuestionNumber,\n  setGameStatus\n})(GameCard);","map":{"version":3,"sources":["C:/Users/44741/Desktop/projects/javascript-quiz/src/components/GameCard.js"],"names":["React","connect","getQuestionList","shuffleArray","setGameStatus","setLoadingStatus","setQuestionNumber","DOMPurity","GameCard","questionList","loading","questionNumber","answersArray","incorrect_answers","correct_answer","checkAnswer","e","disabled","currentTarget","value","classList","add","disbled","__html","sanitize","question","map","answer","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SACEC,aADF,EAEEC,gBAFF,EAGEC,iBAHF,QAIO,kBAJP;AAMA,OAAOC,SAAP,MAAsB,WAAtB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAChBC,EAAAA,YADgB;AAEhBC,EAAAA,OAFgB;AAGhBL,EAAAA,gBAHgB;AAIhBM,EAAAA,cAJgB;AAKhBL,EAAAA,iBALgB;AAMhBF,EAAAA;AANgB,CAAD,KAOX;AACJ,MAAIQ,YAAY,GAAGT,YAAY,CAAC,CAC9B,GAAGM,YAAY,CAACE,cAAD,CAAZ,CAA6BE,iBADF,EAE9BJ,YAAY,CAACE,cAAD,CAAZ,CAA6BG,cAFC,CAAD,CAA/B;;AAKA,MAAIH,cAAc,KAAK,CAAvB,EAA0B;AACxB,WAAOP,aAAa,CAAC,gBAAD,CAApB;AACD;;AAED,QAAMW,WAAW,GAAIC,CAAD,IAAO;AACzB,QAAIC,QAAQ,GAAG,EAAf;;AACA,QAAID,CAAC,CAACE,aAAF,CAAgBC,KAAhB,KAA0BV,YAAY,CAACE,cAAD,CAAZ,CAA6BG,cAA3D,EAA2E;AACzEE,MAAAA,CAAC,CAACE,aAAF,CAAgBE,SAAhB,CAA0BC,GAA1B,CAA8B,cAA9B;AACAJ,MAAAA,QAAQ,GAAG,UAAX;AACD,KAHD,MAGO,CACN;AACF,GAPD;;AASA,sBACE;AAAK,IAAA,SAAS,EAAG,aAAYK,OAAQ,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,uBAAuB,EAAE;AACvBC,MAAAA,MAAM,EAAEhB,SAAS,CAACiB,QAAV,CAAmBf,YAAY,CAACE,cAAD,CAAZ,CAA6Bc,QAAhD;AADe,KAD3B;AAIE,IAAA,SAAS,EAAC,eAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,YAAY,CAACc,GAAb,CAAkBC,MAAD,IAAY;AAC5B,wBACE;AACE,MAAA,uBAAuB,EAAE;AACvBJ,QAAAA,MAAM,EAAEhB,SAAS,CAACiB,QAAV,CAAmBG,MAAnB;AADe,OAD3B;AAIE,MAAA,KAAK,EAAEA,MAJT;AAKE,MAAA,OAAO,EAAGX,CAAD,IAAOD,WAAW,CAACC,CAAD,CAL7B;AAME,MAAA,SAAS,EAAC,eANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD,GAXA,CADH,CAPF,CADF,CADF;AA0BD,CApDD;;AAsDA,MAAMY,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAOA,KAAP;AACD,CAFD;;AAIA,eAAe5B,OAAO,CAAC2B,eAAD,EAAkB;AACtC1B,EAAAA,eADsC;AAEtCG,EAAAA,gBAFsC;AAGtCC,EAAAA,iBAHsC;AAItCF,EAAAA;AAJsC,CAAlB,CAAP,CAKZI,QALY,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getQuestionList } from \"../actions/getQuestionList\";\r\nimport { shuffleArray } from \"../utils/utils\";\r\nimport {\r\n  setGameStatus,\r\n  setLoadingStatus,\r\n  setQuestionNumber,\r\n} from \"../actions/index\";\r\n\r\nimport DOMPurity from \"dompurify\";\r\n\r\nconst GameCard = ({\r\n  questionList,\r\n  loading,\r\n  setLoadingStatus,\r\n  questionNumber,\r\n  setQuestionNumber,\r\n  setGameStatus,\r\n}) => {\r\n  let answersArray = shuffleArray([\r\n    ...questionList[questionNumber].incorrect_answers,\r\n    questionList[questionNumber].correct_answer,\r\n  ]);\r\n\r\n  if (questionNumber === 9) {\r\n    return setGameStatus(\"game-over-page\");\r\n  }\r\n\r\n  const checkAnswer = (e) => {\r\n    let disabled = \"\";\r\n    if (e.currentTarget.value === questionList[questionNumber].correct_answer) {\r\n      e.currentTarget.classList.add(\"right-answer\");\r\n      disabled = \"disabled\";\r\n    } else {\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`game-page ${disbled}`}>\r\n      <div className=\"game-content\">\r\n        <div\r\n          dangerouslySetInnerHTML={{\r\n            __html: DOMPurity.sanitize(questionList[questionNumber].question),\r\n          }}\r\n          className=\"game-question\"\r\n        ></div>\r\n        <div className=\"game-answers\">\r\n          {answersArray.map((answer) => {\r\n            return (\r\n              <button\r\n                dangerouslySetInnerHTML={{\r\n                  __html: DOMPurity.sanitize(answer),\r\n                }}\r\n                value={answer}\r\n                onClick={(e) => checkAnswer(e)}\r\n                className=\"answer-button\"\r\n              ></button>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return state;\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getQuestionList,\r\n  setLoadingStatus,\r\n  setQuestionNumber,\r\n  setGameStatus,\r\n})(GameCard);\r\n"]},"metadata":{},"sourceType":"module"}