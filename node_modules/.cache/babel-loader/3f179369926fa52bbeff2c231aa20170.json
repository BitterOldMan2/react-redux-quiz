{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\44741\\\\Desktop\\\\projects\\\\javascript-quiz\\\\src\\\\pages\\\\gamePage.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getQuestionList } from \"../actions/getQuestionList\";\nimport { setLoadingStatus, setQuestionNumber } from \"../actions/index\";\nimport Loading from \"../components/Loading\";\nimport { DOMPurity } from \"dompurify\";\n\nconst GamePage = ({\n  getQuestionList,\n  difficulty,\n  questionList,\n  loading,\n  setLoadingStatus,\n  questionNumber,\n  setQuestionNumber\n}) => {\n  let answersArray;\n  useEffect(() => {\n    setLoadingStatus(true);\n    getQuestionList(difficulty);\n  }, []);\n\n  if (questionList[questionNumber] != undefined) {\n    setLoadingStatus(false);\n    answersArray = [...questionList[questionNumber].incorrect_answers, questionList[questionNumber].correct_answer];\n  }\n\n  const checkAnswer = e => {\n    if (e.currentTarget.value == questionList[questionNumber].correct_answer) {\n      e.currentTarget.classList.add(\"right-answer\");\n      setQuestionNumber(questionNumber);\n    } else {\n      e.currentTarget.classList.add(\"wrong-answer\");\n    }\n  };\n\n  if (loading === true) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 12\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, questionList[questionNumber].question), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-answers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, answersArray.map(answer => {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        dangerouslySetInnerHTML: {\n          __html: DOMPurity.sanitize(answer)\n        },\n        value: answer,\n        onClick: e => checkAnswer(e),\n        className: \"answer-button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      });\n    }))));\n  }\n};\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(mapStateToProps, {\n  getQuestionList,\n  setLoadingStatus,\n  setQuestionNumber\n})(GamePage);","map":{"version":3,"sources":["C:/Users/44741/Desktop/projects/javascript-quiz/src/pages/gamePage.js"],"names":["React","useEffect","connect","getQuestionList","setLoadingStatus","setQuestionNumber","Loading","DOMPurity","GamePage","difficulty","questionList","loading","questionNumber","answersArray","undefined","incorrect_answers","correct_answer","checkAnswer","e","currentTarget","value","classList","add","question","map","answer","__html","sanitize","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,SAASC,gBAAT,EAA2BC,iBAA3B,QAAoD,kBAApD;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,SAAT,QAA0B,WAA1B;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAChBL,EAAAA,eADgB;AAEhBM,EAAAA,UAFgB;AAGhBC,EAAAA,YAHgB;AAIhBC,EAAAA,OAJgB;AAKhBP,EAAAA,gBALgB;AAMhBQ,EAAAA,cANgB;AAOhBP,EAAAA;AAPgB,CAAD,KAQX;AACJ,MAAIQ,YAAJ;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAD,IAAAA,eAAe,CAACM,UAAD,CAAf;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAIC,YAAY,CAACE,cAAD,CAAZ,IAAgCE,SAApC,EAA+C;AAC7CV,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAS,IAAAA,YAAY,GAAG,CACb,GAAGH,YAAY,CAACE,cAAD,CAAZ,CAA6BG,iBADnB,EAEbL,YAAY,CAACE,cAAD,CAAZ,CAA6BI,cAFhB,CAAf;AAID;;AACD,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACzB,QAAIA,CAAC,CAACC,aAAF,CAAgBC,KAAhB,IAAyBV,YAAY,CAACE,cAAD,CAAZ,CAA6BI,cAA1D,EAA0E;AACxEE,MAAAA,CAAC,CAACC,aAAF,CAAgBE,SAAhB,CAA0BC,GAA1B,CAA8B,cAA9B;AACAjB,MAAAA,iBAAiB,CAACO,cAAD,CAAjB;AACD,KAHD,MAGO;AACLM,MAAAA,CAAC,CAACC,aAAF,CAAgBE,SAAhB,CAA0BC,GAA1B,CAA8B,cAA9B;AACD;AACF,GAPD;;AASA,MAAIX,OAAO,KAAK,IAAhB,EAAsB;AACpB,wBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,MAEO;AACL,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,YAAY,CAACE,cAAD,CAAZ,CAA6BW,QADhC,CADF,eAIE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGV,YAAY,CAACW,GAAb,CAAkBC,MAAD,IAAY;AAC5B,0BACE;AACE,QAAA,uBAAuB,EAAE;AACvBC,UAAAA,MAAM,EAAEnB,SAAS,CAACoB,QAAV,CAAmBF,MAAnB;AADe,SAD3B;AAIE,QAAA,KAAK,EAAEA,MAJT;AAKE,QAAA,OAAO,EAAGP,CAAD,IAAOD,WAAW,CAACC,CAAD,CAL7B;AAME,QAAA,SAAS,EAAC,eANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAUD,KAXA,CADH,CAJF,CADF,CADF;AAuBD;AACF,CA3DD;;AA6DA,MAAMU,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAOA,KAAP;AACD,CAFD;;AAIA,eAAe3B,OAAO,CAAC0B,eAAD,EAAkB;AACtCzB,EAAAA,eADsC;AAEtCC,EAAAA,gBAFsC;AAGtCC,EAAAA;AAHsC,CAAlB,CAAP,CAIZG,QAJY,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getQuestionList } from \"../actions/getQuestionList\";\r\nimport { setLoadingStatus, setQuestionNumber } from \"../actions/index\";\r\nimport Loading from \"../components/Loading\";\r\nimport { DOMPurity } from \"dompurify\";\r\nconst GamePage = ({\r\n  getQuestionList,\r\n  difficulty,\r\n  questionList,\r\n  loading,\r\n  setLoadingStatus,\r\n  questionNumber,\r\n  setQuestionNumber,\r\n}) => {\r\n  let answersArray;\r\n\r\n  useEffect(() => {\r\n    setLoadingStatus(true);\r\n    getQuestionList(difficulty);\r\n  }, []);\r\n\r\n  if (questionList[questionNumber] != undefined) {\r\n    setLoadingStatus(false);\r\n    answersArray = [\r\n      ...questionList[questionNumber].incorrect_answers,\r\n      questionList[questionNumber].correct_answer,\r\n    ];\r\n  }\r\n  const checkAnswer = (e) => {\r\n    if (e.currentTarget.value == questionList[questionNumber].correct_answer) {\r\n      e.currentTarget.classList.add(\"right-answer\");\r\n      setQuestionNumber(questionNumber);\r\n    } else {\r\n      e.currentTarget.classList.add(\"wrong-answer\");\r\n    }\r\n  };\r\n\r\n  if (loading === true) {\r\n    return <Loading />;\r\n  } else {\r\n    return (\r\n      <div className=\"game-page\">\r\n        <div className=\"game-content\">\r\n          <div className=\"game-question\">\r\n            {questionList[questionNumber].question}\r\n          </div>\r\n          <div className=\"game-answers\">\r\n            {answersArray.map((answer) => {\r\n              return (\r\n                <button\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: DOMPurity.sanitize(answer),\r\n                  }}\r\n                  value={answer}\r\n                  onClick={(e) => checkAnswer(e)}\r\n                  className=\"answer-button\"\r\n                ></button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return state;\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getQuestionList,\r\n  setLoadingStatus,\r\n  setQuestionNumber,\r\n})(GamePage);\r\n"]},"metadata":{},"sourceType":"module"}