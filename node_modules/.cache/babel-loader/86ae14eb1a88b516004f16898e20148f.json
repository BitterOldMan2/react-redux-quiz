{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\44741\\\\Desktop\\\\projects\\\\javascript-quiz\\\\src\\\\components\\\\GameCard.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getQuestionList } from \"../actions/getQuestionList\";\nimport { shuffleArray } from \"../utils/utils\";\nimport { setGameStatus, setQuestionNumber } from \"../actions/index\";\nimport { Howl, Howler } from \"howler\";\nimport correctAnswerSound from \"../sounds/Correct-answer.mp3\";\nimport DOMPurity from \"dompurify\";\n\nconst GameCard = ({\n  questionList,\n  questionNumber,\n  setQuestionNumber,\n  setGameStatus\n}) => {\n  let answersArray = shuffleArray([...questionList[questionNumber].incorrect_answers, questionList[questionNumber].correct_answer]);\n\n  if (questionNumber === 9) {\n    setGameStatus(\"game-over-page\");\n    setQuestionNumber(0);\n  }\n\n  const correctAnswer = new Howl({\n    src: [correctAnswerSound]\n  });\n\n  const checkAnswerResults = () => {};\n\n  const addClassName = (element, name, action) => {\n    element.classList.add(name);\n    element.parentNode.parentNode.classList.action(\"disabled\");\n  };\n\n  const checkAnswer = e => {\n    let answerButton = e.currentTarget;\n\n    if (answerButton.value === questionList[questionNumber].correct_answer) {\n      addClassName(answerButton, \"right-answer\");\n      setTimeout(() => {\n        answerButton.classList.remove(\"right-answer\");\n        answerButton.parentNode.parentNode.classList.remove(\"disabled\");\n        setQuestionNumber(questionNumber);\n      }, 2000);\n    } else {\n      addClassName(answerButton, \"wrong-answer\");\n      setTimeout(e => {\n        answerButton.classList.remove(\"wrong-answer\");\n        answerButton.parentNode.parentNode.classList.remove(\"disabled\");\n        setQuestionNumber(questionNumber);\n      }, 2000);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: DOMPurity.sanitize(questionList[questionNumber].question)\n    },\n    className: \"game-question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game-answers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, answersArray.map(answer => {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      dangerouslySetInnerHTML: {\n        __html: DOMPurity.sanitize(answer)\n      },\n      value: answer,\n      onClick: e => checkAnswer(e),\n      className: \"answer-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    });\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(mapStateToProps, {\n  getQuestionList,\n  setQuestionNumber,\n  setGameStatus\n})(GameCard);","map":{"version":3,"sources":["C:/Users/44741/Desktop/projects/javascript-quiz/src/components/GameCard.js"],"names":["React","connect","getQuestionList","shuffleArray","setGameStatus","setQuestionNumber","Howl","Howler","correctAnswerSound","DOMPurity","GameCard","questionList","questionNumber","answersArray","incorrect_answers","correct_answer","correctAnswer","src","checkAnswerResults","addClassName","element","name","action","classList","add","parentNode","checkAnswer","e","answerButton","currentTarget","value","setTimeout","remove","__html","sanitize","question","map","answer","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getQuestionList } from \"../actions/getQuestionList\";\r\nimport { shuffleArray } from \"../utils/utils\";\r\nimport { setGameStatus, setQuestionNumber } from \"../actions/index\";\r\nimport { Howl, Howler } from \"howler\";\r\nimport correctAnswerSound from \"../sounds/Correct-answer.mp3\";\r\n\r\nimport DOMPurity from \"dompurify\";\r\n\r\nconst GameCard = ({\r\n  questionList,\r\n  questionNumber,\r\n  setQuestionNumber,\r\n  setGameStatus,\r\n}) => {\r\n  let answersArray = shuffleArray([\r\n    ...questionList[questionNumber].incorrect_answers,\r\n    questionList[questionNumber].correct_answer,\r\n  ]);\r\n\r\n  if (questionNumber === 9) {\r\n    setGameStatus(\"game-over-page\");\r\n    setQuestionNumber(0);\r\n  }\r\n\r\n  const correctAnswer = new Howl({\r\n    src: [correctAnswerSound],\r\n  });\r\n\r\n  const checkAnswerResults = () => {};\r\n\r\n  const addClassName = (element, name, action) => {\r\n    element.classList.add(name);\r\n    element.parentNode.parentNode.classList.action(\"disabled\");\r\n  };\r\n\r\n  const checkAnswer = (e) => {\r\n    let answerButton = e.currentTarget;\r\n    if (answerButton.value === questionList[questionNumber].correct_answer) {\r\n      addClassName(answerButton, \"right-answer\");\r\n      setTimeout(() => {\r\n        answerButton.classList.remove(\"right-answer\");\r\n        answerButton.parentNode.parentNode.classList.remove(\"disabled\");\r\n        setQuestionNumber(questionNumber);\r\n      }, 2000);\r\n    } else {\r\n      addClassName(answerButton, \"wrong-answer\");\r\n      setTimeout((e) => {\r\n        answerButton.classList.remove(\"wrong-answer\");\r\n        answerButton.parentNode.parentNode.classList.remove(\"disabled\");\r\n        setQuestionNumber(questionNumber);\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"game-page\">\r\n      <div className=\"game-content\">\r\n        <div\r\n          dangerouslySetInnerHTML={{\r\n            __html: DOMPurity.sanitize(questionList[questionNumber].question),\r\n          }}\r\n          className=\"game-question\"\r\n        ></div>\r\n        <div className=\"game-answers\">\r\n          {answersArray.map((answer) => {\r\n            return (\r\n              <button\r\n                dangerouslySetInnerHTML={{\r\n                  __html: DOMPurity.sanitize(answer),\r\n                }}\r\n                value={answer}\r\n                onClick={(e) => checkAnswer(e)}\r\n                className=\"answer-button\"\r\n              ></button>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return state;\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getQuestionList,\r\n  setQuestionNumber,\r\n  setGameStatus,\r\n})(GameCard);\r\n"]},"metadata":{},"sourceType":"module"}