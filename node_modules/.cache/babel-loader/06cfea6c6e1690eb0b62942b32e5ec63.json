{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\44741\\\\Desktop\\\\typescript-react\\\\javascript-quiz\\\\src\\\\pages\\\\gamePage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { fetchData } from \"../api/api\";\n\nconst GamePage = () => {\n  const [cards, setCards] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [cardNr, setCardNr] = useState(0);\n  const [gameCard, setGameCard] = useState({\n    question: \"\",\n    incorrectAnswers: [],\n    correctAnswer: \"\"\n  });\n\n  const checkAnswer = e => {\n    if (e.currentTarget.value === gameCard[cardNr].correct_answer) {\n      e.currentTarget.classList.add(\"right-answer\");\n      setcardNr(cardNr + 1);\n    } else {\n      e.currentTarget.classList.add(\"wrong-answer\");\n    }\n  };\n\n  useEffect(async () => {\n    const newCard = await fetchData();\n    setGameCard(newCard);\n  }, []);\n  setTimeout(() => {\n    setLoading(false);\n  }, 5000);\n\n  if (loading === true) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, \"Loading\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: gameCard[cardNr].question\n      },\n      className: \"game-question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-answers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, gameCard[cardNr].answers.map(answer => {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        value: answer,\n        onClick: e => checkAnswer(e),\n        className: \"answer-button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }, answer);\n    }))));\n  }\n};\n\nexport default GamePage;","map":{"version":3,"sources":["C:/Users/44741/Desktop/typescript-react/javascript-quiz/src/pages/gamePage.js"],"names":["React","useState","useEffect","fetchData","GamePage","cards","setCards","loading","setLoading","cardNr","setCardNr","gameCard","setGameCard","question","incorrectAnswers","correctAnswer","checkAnswer","e","currentTarget","value","correct_answer","classList","add","setcardNr","newCard","setTimeout","__html","answers","map","answer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,SAAT,QAA0B,YAA1B;;AACA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC;AACvCY,IAAAA,QAAQ,EAAE,EAD6B;AAEvCC,IAAAA,gBAAgB,EAAE,EAFqB;AAGvCC,IAAAA,aAAa,EAAE;AAHwB,GAAD,CAAxC;;AAMA,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACzB,QAAIA,CAAC,CAACC,aAAF,CAAgBC,KAAhB,KAA0BR,QAAQ,CAACF,MAAD,CAAR,CAAiBW,cAA/C,EAA+D;AAC7DH,MAAAA,CAAC,CAACC,aAAF,CAAgBG,SAAhB,CAA0BC,GAA1B,CAA8B,cAA9B;AACAC,MAAAA,SAAS,CAACd,MAAM,GAAG,CAAV,CAAT;AACD,KAHD,MAGO;AACLQ,MAAAA,CAAC,CAACC,aAAF,CAAgBG,SAAhB,CAA0BC,GAA1B,CAA8B,cAA9B;AACD;AACF,GAPD;;AASApB,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMsB,OAAO,GAAG,MAAMrB,SAAS,EAA/B;AACAS,IAAAA,WAAW,CAACY,OAAD,CAAX;AACD,GAHQ,EAGN,EAHM,CAAT;AAKAC,EAAAA,UAAU,CAAC,MAAM;AACfjB,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAFS,EAEP,IAFO,CAAV;;AAIA,MAAID,OAAO,KAAK,IAAhB,EAAsB;AACpB,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD,GAPD,MAOO;AACL,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,uBAAuB,EAAE;AAAEmB,QAAAA,MAAM,EAAEf,QAAQ,CAACF,MAAD,CAAR,CAAiBI;AAA3B,OAD3B;AAEE,MAAA,SAAS,EAAC,eAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAKE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,QAAQ,CAACF,MAAD,CAAR,CAAiBkB,OAAjB,CAAyBC,GAAzB,CAA8BC,MAAD,IAAY;AACxC,0BACE;AACE,QAAA,KAAK,EAAEA,MADT;AAEE,QAAA,OAAO,EAAGZ,CAAD,IAAOD,WAAW,CAACC,CAAD,CAF7B;AAGE,QAAA,SAAS,EAAC,eAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGY,MALH,CADF;AASD,KAVA,CADH,CALF,CADF,CADF;AAuBD;AACF,CA5DD;;AA8DA,eAAezB,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { fetchData } from \"../api/api\";\r\nconst GamePage = () => {\r\n  const [cards, setCards] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [cardNr, setCardNr] = useState(0);\r\n  const [gameCard, setGameCard] = useState({\r\n    question: \"\",\r\n    incorrectAnswers: [],\r\n    correctAnswer: \"\",\r\n  });\r\n\r\n  const checkAnswer = (e) => {\r\n    if (e.currentTarget.value === gameCard[cardNr].correct_answer) {\r\n      e.currentTarget.classList.add(\"right-answer\");\r\n      setcardNr(cardNr + 1);\r\n    } else {\r\n      e.currentTarget.classList.add(\"wrong-answer\");\r\n    }\r\n  };\r\n\r\n  useEffect(async () => {\r\n    const newCard = await fetchData();\r\n    setGameCard(newCard);\r\n  }, []);\r\n\r\n  setTimeout(() => {\r\n    setLoading(false);\r\n  }, 5000);\r\n\r\n  if (loading === true) {\r\n    return (\r\n      <div className=\"game-page\">\r\n        <div>Loading</div>\r\n        <div className=\"loader\"></div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"game-page\">\r\n        <div className=\"game-content\">\r\n          <div\r\n            dangerouslySetInnerHTML={{ __html: gameCard[cardNr].question }}\r\n            className=\"game-question\"\r\n          ></div>\r\n          <div className=\"game-answers\">\r\n            {gameCard[cardNr].answers.map((answer) => {\r\n              return (\r\n                <button\r\n                  value={answer}\r\n                  onClick={(e) => checkAnswer(e)}\r\n                  className=\"answer-button\"\r\n                >\r\n                  {answer}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default GamePage;\r\n"]},"metadata":{},"sourceType":"module"}