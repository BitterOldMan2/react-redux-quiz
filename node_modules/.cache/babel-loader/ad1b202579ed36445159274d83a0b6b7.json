{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\44741\\\\Desktop\\\\typescript-react\\\\javascript-quiz\\\\src\\\\pages\\\\gamePage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { fetchData } from \"../api/api\";\n\nconst GamePage = () => {\n  const [cards, setCards] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [cardNr, setCardNr] = useState(0);\n  const [gameCard, setGameCard] = useState({\n    question: \"\",\n    incorrectAnswers: [],\n    correctAnswer: \"\"\n  });\n  useEffect(async () => {\n    const newCard = await fetchData();\n    setGameCard(newCard);\n  }, []);\n  setTimeout(() => {\n    setLoading(false);\n  }, 5000);\n\n  if (loading === true) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, \"Loading\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, gameCard[cardNr].question), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"answers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, gameCard[cardNr].answers.map(answer => {\n      /*#__PURE__*/\n      React.createElement(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }\n      }, answer);\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: console.log(gameCard),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    })));\n  }\n};\n\nexport default GamePage;","map":{"version":3,"sources":["C:/Users/44741/Desktop/typescript-react/javascript-quiz/src/pages/gamePage.js"],"names":["React","useState","useEffect","fetchData","GamePage","cards","setCards","loading","setLoading","cardNr","setCardNr","gameCard","setGameCard","question","incorrectAnswers","correctAnswer","newCard","setTimeout","answers","map","answer","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,SAAT,QAA0B,YAA1B;;AACA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC;AACvCY,IAAAA,QAAQ,EAAE,EAD6B;AAEvCC,IAAAA,gBAAgB,EAAE,EAFqB;AAGvCC,IAAAA,aAAa,EAAE;AAHwB,GAAD,CAAxC;AAKAb,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMc,OAAO,GAAG,MAAMb,SAAS,EAA/B;AACAS,IAAAA,WAAW,CAACI,OAAD,CAAX;AACD,GAHQ,EAGN,EAHM,CAAT;AAKAC,EAAAA,UAAU,CAAC,MAAM;AACfT,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAFS,EAEP,IAFO,CAAV;;AAIA,MAAID,OAAO,KAAK,IAAhB,EAAsB;AACpB,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD,GAPD,MAOO;AACL,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BI,QAAQ,CAACF,MAAD,CAAR,CAAiBI,QAA5C,CADF,eAEE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,QAAQ,CAACF,MAAD,CAAR,CAAiBS,OAAjB,CAAyBC,GAAzB,CAA8BC,MAAD,IAAY;AACxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASA,MAAT;AACD,KAFA,CADH,CAFF,eAOE;AAAQ,MAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYX,QAAZ,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF,CADF;AAaD;AACF,CAxCD;;AA0CA,eAAeP,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { fetchData } from \"../api/api\";\r\nconst GamePage = () => {\r\n  const [cards, setCards] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [cardNr, setCardNr] = useState(0);\r\n  const [gameCard, setGameCard] = useState({\r\n    question: \"\",\r\n    incorrectAnswers: [],\r\n    correctAnswer: \"\",\r\n  });\r\n  useEffect(async () => {\r\n    const newCard = await fetchData();\r\n    setGameCard(newCard);\r\n  }, []);\r\n\r\n  setTimeout(() => {\r\n    setLoading(false);\r\n  }, 5000);\r\n\r\n  if (loading === true) {\r\n    return (\r\n      <div className=\"game-page\">\r\n        <div>Loading</div>\r\n        <div className=\"loader\"></div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"game-page\">\r\n        <div className=\"content\">\r\n          <div className=\"question\">{gameCard[cardNr].question}</div>\r\n          <div className=\"answers\">\r\n            {gameCard[cardNr].answers.map((answer) => {\r\n              <button>{answer}</button>;\r\n            })}\r\n          </div>\r\n          <button onClick={console.log(gameCard)}></button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default GamePage;\r\n"]},"metadata":{},"sourceType":"module"}