{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\44741\\\\Desktop\\\\projects\\\\javascript-quiz\\\\src\\\\pages\\\\gamePage.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getQuestionList } from \"../actions/getQuestionList\";\nimport { setLoadingStatus } from \"../actions/index\";\nimport Loading from \"../components/Loading\";\n\nconst GamePage = ({\n  getQuestionList,\n  difficulty,\n  questionList,\n  loading,\n  setLoadingStatus,\n  questionNumber\n}) => {\n  let answersArray;\n  useEffect(() => {\n    setLoadingStatus(true);\n    getQuestionList(difficulty);\n  }, []);\n\n  if (questionList[0] != undefined) {\n    setLoadingStatus(false);\n    answersArray = [...questionList[questionNumber].incorrect_answers, questionList[questionNumber].correct_answer];\n  }\n\n  const checkAnswer = e => {\n    if (e.currentTarget.value == questionList[0].correct_answer) {\n      e.currentTarget.classList.add(\"right-answer\");\n    } else {\n      e.currentTarget.classList.add(\"wrong-answer\");\n    }\n  };\n\n  if (loading === true) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 12\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, questionList[0].question), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-answers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, answersArray.map(answer => {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        dangerouslySetInnerHTML: {\n          __html: answer\n        },\n        value: answer,\n        onClick: e => checkAnswer(e),\n        className: \"answer-button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      });\n    }))));\n  }\n};\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(mapStateToProps, {\n  getQuestionList,\n  setLoadingStatus\n})(GamePage);","map":{"version":3,"sources":["C:/Users/44741/Desktop/projects/javascript-quiz/src/pages/gamePage.js"],"names":["React","useEffect","connect","getQuestionList","setLoadingStatus","Loading","GamePage","difficulty","questionList","loading","questionNumber","answersArray","undefined","incorrect_answers","correct_answer","checkAnswer","e","currentTarget","value","classList","add","question","map","answer","__html","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAChBH,EAAAA,eADgB;AAEhBI,EAAAA,UAFgB;AAGhBC,EAAAA,YAHgB;AAIhBC,EAAAA,OAJgB;AAKhBL,EAAAA,gBALgB;AAMhBM,EAAAA;AANgB,CAAD,KAOX;AACJ,MAAIC,YAAJ;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAD,IAAAA,eAAe,CAACI,UAAD,CAAf;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAIC,YAAY,CAAC,CAAD,CAAZ,IAAmBI,SAAvB,EAAkC;AAChCR,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAO,IAAAA,YAAY,GAAG,CACb,GAAGH,YAAY,CAACE,cAAD,CAAZ,CAA6BG,iBADnB,EAEbL,YAAY,CAACE,cAAD,CAAZ,CAA6BI,cAFhB,CAAf;AAID;;AACD,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACzB,QAAIA,CAAC,CAACC,aAAF,CAAgBC,KAAhB,IAAyBV,YAAY,CAAC,CAAD,CAAZ,CAAgBM,cAA7C,EAA6D;AAC3DE,MAAAA,CAAC,CAACC,aAAF,CAAgBE,SAAhB,CAA0BC,GAA1B,CAA8B,cAA9B;AACD,KAFD,MAEO;AACLJ,MAAAA,CAAC,CAACC,aAAF,CAAgBE,SAAhB,CAA0BC,GAA1B,CAA8B,cAA9B;AACD;AACF,GAND;;AAQA,MAAIX,OAAO,KAAK,IAAhB,EAAsB;AACpB,wBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,MAEO;AACL,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCD,YAAY,CAAC,CAAD,CAAZ,CAAgBa,QAAhD,CADF,eAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGV,YAAY,CAACW,GAAb,CAAkBC,MAAD,IAAY;AAC5B,0BACE;AACE,QAAA,uBAAuB,EAAE;AAAEC,UAAAA,MAAM,EAAED;AAAV,SAD3B;AAEE,QAAA,KAAK,EAAEA,MAFT;AAGE,QAAA,OAAO,EAAGP,CAAD,IAAOD,WAAW,CAACC,CAAD,CAH7B;AAIE,QAAA,SAAS,EAAC,eAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAQD,KATA,CADH,CAFF,CADF,CADF;AAmBD;AACF,CArDD;;AAuDA,MAAMS,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAOA,KAAP;AACD,CAFD;;AAIA,eAAexB,OAAO,CAACuB,eAAD,EAAkB;AAAEtB,EAAAA,eAAF;AAAmBC,EAAAA;AAAnB,CAAlB,CAAP,CACbE,QADa,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getQuestionList } from \"../actions/getQuestionList\";\r\nimport { setLoadingStatus } from \"../actions/index\";\r\nimport Loading from \"../components/Loading\";\r\n\r\nconst GamePage = ({\r\n  getQuestionList,\r\n  difficulty,\r\n  questionList,\r\n  loading,\r\n  setLoadingStatus,\r\n  questionNumber,\r\n}) => {\r\n  let answersArray;\r\n\r\n  useEffect(() => {\r\n    setLoadingStatus(true);\r\n    getQuestionList(difficulty);\r\n  }, []);\r\n\r\n  if (questionList[0] != undefined) {\r\n    setLoadingStatus(false);\r\n    answersArray = [\r\n      ...questionList[questionNumber].incorrect_answers,\r\n      questionList[questionNumber].correct_answer,\r\n    ];\r\n  }\r\n  const checkAnswer = (e) => {\r\n    if (e.currentTarget.value == questionList[0].correct_answer) {\r\n      e.currentTarget.classList.add(\"right-answer\");\r\n    } else {\r\n      e.currentTarget.classList.add(\"wrong-answer\");\r\n    }\r\n  };\r\n\r\n  if (loading === true) {\r\n    return <Loading />;\r\n  } else {\r\n    return (\r\n      <div className=\"game-page\">\r\n        <div className=\"game-content\">\r\n          <div className=\"game-question\">{questionList[0].question}</div>\r\n          <div className=\"game-answers\">\r\n            {answersArray.map((answer) => {\r\n              return (\r\n                <button\r\n                  dangerouslySetInnerHTML={{ __html: answer }}\r\n                  value={answer}\r\n                  onClick={(e) => checkAnswer(e)}\r\n                  className=\"answer-button\"\r\n                ></button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return state;\r\n};\r\n\r\nexport default connect(mapStateToProps, { getQuestionList, setLoadingStatus })(\r\n  GamePage\r\n);\r\n"]},"metadata":{},"sourceType":"module"}