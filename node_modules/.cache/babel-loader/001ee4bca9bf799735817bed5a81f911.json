{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\44741\\\\Desktop\\\\projects\\\\javascript-quiz\\\\src\\\\pages\\\\gamePage.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getQuestionList } from \"../actions/getQuestionList\";\nimport { shuffleArray } from \"../utils/utils\";\nimport { setGameStatus, setLoadingStatus, setQuestionNumber } from \"../actions/index\";\nimport Loading from \"../components/Loading\";\nimport DOMPurity from \"dompurify\";\n\nconst GamePage = ({\n  getQuestionList,\n  difficulty,\n  questionList,\n  loading,\n  setLoadingStatus,\n  questionNumber,\n  setQuestionNumber,\n  setGameStatus\n}) => {\n  useEffect(() => {\n    setLoadingStatus(true);\n    getQuestionList(difficulty);\n  }, []); //Wait for the action to fetch the questions\n\n  questionList[0] !== undefined ? setLoadingStatus(false) : setLoadingStatus(true);\n\n  if (loading == true) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 12\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 12\n      }\n    }, \"hello\");\n  }\n};\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(mapStateToProps, {\n  getQuestionList,\n  setLoadingStatus,\n  setQuestionNumber,\n  setGameStatus\n})(GamePage);","map":{"version":3,"sources":["C:/Users/44741/Desktop/projects/javascript-quiz/src/pages/gamePage.js"],"names":["React","useEffect","connect","getQuestionList","shuffleArray","setGameStatus","setLoadingStatus","setQuestionNumber","Loading","DOMPurity","GamePage","difficulty","questionList","loading","questionNumber","undefined","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,SACEC,aADF,EAEEC,gBAFF,EAGEC,iBAHF,QAIO,kBAJP;AAKA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,SAAP,MAAsB,WAAtB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAChBP,EAAAA,eADgB;AAEhBQ,EAAAA,UAFgB;AAGhBC,EAAAA,YAHgB;AAIhBC,EAAAA,OAJgB;AAKhBP,EAAAA,gBALgB;AAMhBQ,EAAAA,cANgB;AAOhBP,EAAAA,iBAPgB;AAQhBF,EAAAA;AARgB,CAAD,KASX;AACJJ,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAH,IAAAA,eAAe,CAACQ,UAAD,CAAf;AACD,GAHQ,EAGN,EAHM,CAAT,CADI,CAMJ;;AACAC,EAAAA,YAAY,CAAC,CAAD,CAAZ,KAAoBG,SAApB,GACIT,gBAAgB,CAAC,KAAD,CADpB,GAEIA,gBAAgB,CAAC,IAAD,CAFpB;;AAIA,MAAIO,OAAO,IAAI,IAAf,EAAqB;AACnB,wBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,MAEO;AACL,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACD;AACF,CAzBD;;AA2BA,MAAMG,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAOA,KAAP;AACD,CAFD;;AAIA,eAAef,OAAO,CAACc,eAAD,EAAkB;AACtCb,EAAAA,eADsC;AAEtCG,EAAAA,gBAFsC;AAGtCC,EAAAA,iBAHsC;AAItCF,EAAAA;AAJsC,CAAlB,CAAP,CAKZK,QALY,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getQuestionList } from \"../actions/getQuestionList\";\r\nimport { shuffleArray } from \"../utils/utils\";\r\n\r\nimport {\r\n  setGameStatus,\r\n  setLoadingStatus,\r\n  setQuestionNumber,\r\n} from \"../actions/index\";\r\nimport Loading from \"../components/Loading\";\r\nimport DOMPurity from \"dompurify\";\r\n\r\nconst GamePage = ({\r\n  getQuestionList,\r\n  difficulty,\r\n  questionList,\r\n  loading,\r\n  setLoadingStatus,\r\n  questionNumber,\r\n  setQuestionNumber,\r\n  setGameStatus,\r\n}) => {\r\n  useEffect(() => {\r\n    setLoadingStatus(true);\r\n    getQuestionList(difficulty);\r\n  }, []);\r\n\r\n  //Wait for the action to fetch the questions\r\n  questionList[0] !== undefined\r\n    ? setLoadingStatus(false)\r\n    : setLoadingStatus(true);\r\n\r\n  if (loading == true) {\r\n    return <Loading />;\r\n  } else {\r\n    return <div>hello</div>;\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return state;\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getQuestionList,\r\n  setLoadingStatus,\r\n  setQuestionNumber,\r\n  setGameStatus,\r\n})(GamePage);\r\n"]},"metadata":{},"sourceType":"module"}